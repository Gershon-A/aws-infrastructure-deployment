name: Deploy Infrastructure
on:
  # push:
  #   branches:
  #     - 'main' # Development
  #     - 'release/**' # Staging
  #     - 'matrix' # Testing
  pull_request:
    types: [opened, synchronize, reopened]
  release: # Production
    types: [published]
  workflow_dispatch:

jobs:
  get-environment:
   name: Get Environment
   uses: ./.github/workflows/get-environment.yaml

  deployment:
    name: Cloudformation Deploy
    needs: [ get-environment ]
    strategy:
      matrix:
        arrays: [
          {stack-name: "TestS3", template: "Templates/test-s3.yaml",                        parameter-file: "TestS3" }
        #  {stack-name: "TTM4J-GlobalRoles", template: "Templates/01-GlobalRoles.yaml",      parameter-file: "GlobalRoles" },
        #  {stack-name: "TTM4JVPC",          template: "Templates/03-TTM4JVPC.yaml",         parameter-file: "VPC"}
        ]
      fail-fast: true  # When set to true, GitHub cancels all in-progress jobs if any matrix job fails.
      max-parallel: 1  # The maximum number of jobs that can run simultaneously. Need that for sequential matrix deployments execution.
    uses: ./.github/workflows/deployment.yaml
    with:
      stack-name: ${{ matrix.arrays.stack-name }}
      template:   ${{ matrix.arrays.template }}
      environment:  ${{ needs.get-environment.outputs.deployment-environment }}
      parameter-file:  ${{ matrix.arrays.parameter-file }}
      capabilities: 'CAPABILITY_AUTO_EXPAND CAPABILITY_NAMED_IAM CAPABILITY_IAM'
      service-tag: "my service"
    secrets: inherit

  GetResults:
    name: Deploy CFN stack to AWS ${{ needs.get-environment.outputs.deployment-environment }}
    runs-on: ubuntu-latest
    needs: [ deployment ]
    permissions:
      pull-requests: write
      id-token: write
      contents: write
    # environment:
    #  name: ${{ needs.get-environment.outputs.deployment-environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: 'ci-cd'

      - run: echo ${{ needs.deployment.outputs.DEPLOYMENT_STATUS }}
      # Example
      - name: Generate list using Markdown
        run: |
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY

      - name: Download math result for job 2
        uses: actions/download-artifact@v3
        with:
          name: CloudFormation

